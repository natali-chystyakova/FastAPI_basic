from fastapi import FastAPI, HTTPException
from pydantic import BaseModel
from fastapi.middleware.cors import CORSMiddleware


app = FastAPI()
app.add_middleware(
    CORSMiddleware, allow_origins=["http://localhost:63342"]  # * - –≤—Å–µ —Å–∞–π—Ç—ã –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ –º–æ–≥—É—Ç –∫ –Ω–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è
)


@app.get("/", summary="–ì–ª–∞–≤–Ω—ã–π –ø—É—Ç—å", tags=["–û—Å–Ω–æ–≤–Ω—ã–µ –ø—É—Ç–∏"])
def home():
    return "Hello World!!!"


books = [
    {
        "id": 1,
        "title": "–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å –≤ Python",
        "author": "–ú—ç—Ç—Ç—å—é",
    },
    {
        "id": 2,
        "title": "Beckend —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ Python",
        "author": "–ê—Ä—Ç–µ–º",
    },
]


@app.get("/books", tags=["–ö–Ω–∏–≥–∏ üìö"], summary="–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–Ω–∏–≥–∏")
def read_books():
    return books


@app.get("/books/{book_id}", tags=["–ö–Ω–∏–≥–∏"], summary="–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∫–Ω–∏–≥–∏")
def get_book(book_id: int):
    for book in books:
        if book["id"] == book_id:
            return book
    raise HTTPException(status_code=404, detail="–ö–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")


class Newbook(BaseModel):
    title: str
    author: str


@app.post("/books", tags=["–ö–Ω–∏–≥–∏"])
def create_book(new_book: Newbook):
    books.append(
        {
            "id": len(books) + 1,
            "title": new_book.title,
            "author": new_book.author,
        }
    )
    return {"success": True, "message": "–ö–Ω–∏–≥–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞"}


#
# if __name__=="__main__":
#     uvicorn.run("main:app", reload=True)

# if __name__=="__main__":
#     uvicorn.run("main_start:app", reload=True)
